{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","requiered","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","localStorageRef","localStorage","getItem","match","params","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","getElementById"],"mappings":"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","file":"static/js/main.fc002040.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { getFunName } from '../helpers'\n\nclass StorePicker extends React.Component {\n    \n    static propTypes = {\n        history: PropTypes.object\n    }\n    \n    myInput = React.createRef()\n    \n    goToStore = event => {\n        event.preventDefault()\n        const storeName = this.myInput.current.value\n        this.props.history.push(`/store/${storeName}`)\n    }\n    \n    render() {\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Please Enter A Store</h2>\n                <input \n                type=\"text\" \n                ref={this.myInput}\n                requiered \n                placeholder=\"store Name\" \n                defaultValue={getFunName()}\n                />\n                <button \n                type='submit'\n                >Visit Store</button>\n            </form>\n            )\n    }\n}\n\nexport default StorePicker","import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst Header = props => (\n            <header className='top'>\n                <h1>\n                    Catch\n                    <span className='ofThe'>\n                    <span className='of'>Of</span>\n                    <span className='the'>The</span>\n                    </span>\n                    Day\n                    </h1>\n                <h3 className='tagline'>\n                    <span>{props.tagline}</span>\n                </h3>\n            </header>\n        )\n        \nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {formatPrice} from '../helpers'\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\n\nclass Order extends React.Component {\n    \n     static propTypes = {\n            fishes: PropTypes.object,\n            order: PropTypes.object,\n            removeFromOrder: PropTypes.func\n        }\n    \n    renderOrder = (key) => {\n        const fish = this.props.fishes[key]\n        const count = this.props.order[key]\n        const isAvailable = fish && fish.status === 'available'\n        const transitionOptions = {\n            classNames: 'order',\n            key,\n            timeout:{enter:250, exit:250}\n        }\n        \n        if(!fish) return null;\n        \n        if (!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    Sorry {fish ? fish.name : 'fish'} is no longer available\n                </li>\n                </CSSTransition>\n                )\n        }\n        \n        return (\n            <CSSTransition {...transitionOptions}>\n            <li key={key}>\n            <span>\n                <TransitionGroup component=\"span\" className='count'>\n                    <CSSTransition \n                    classNames=\"count\" \n                    key={count} \n                    timeout={{enter: 250, exit: 250}}\n                    >\n                        <span>{count}</span>\n                    </CSSTransition>\n                </TransitionGroup>\n                lbs {fish.name}\n                {formatPrice(count * fish.price)}\n                <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n            </span>\n            </li>\n            </CSSTransition>\n        )\n\n        \n    }\n    render() {\n        const orderIds = Object.keys(this.props.order)\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key]\n            const count = this.props.order[key]\n            const isAvailable = fish && fish.status === 'available'\n            if(isAvailable) {\n                return prevTotal + (count * fish.price)\n            }\n            return prevTotal\n        }, 0)\n        return (\n            <div className='order-wrap'>\n            <h2>Order</h2>\n            <TransitionGroup component=\"ul\" className='order'> \n                {orderIds.map(this.renderOrder)} \n            </TransitionGroup>\n            <div className=\"total\">\n            Total:\n            <strong>{formatPrice(total)}</strong>\n            </div>\n            </div>\n            )\n    }\n};\n\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n    \n    static propTypes = {\n        addFish: PropTypes.func\n    }\n    \n    createFish = (event) => {\n        event.preventDefault()\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        }\n        this.props.addFish(fish);\n        event.currentTarget.reset();\n    }\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n             <input name=\"name\" ref={this.nameRef} type='text' placeholder=\"Name\" />\n             <input name=\"price\" ref={this.priceRef} type='text' placeholder=\"Price\" />\n             <select name=\"status\" ref={this.statusRef} placeholder=\"Status\" >\n                <option value=\"available\">Fresh!</option>\n                <option value=\"unavailable\">Sold Out</option>\n             </select>\n             <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n             <input name=\"image\" ref={this.imageRef} type='text' placeholder=\"Image\" />\n             <button type=\"submit\">Add Fish</button>\n            </form>\n            )\n    }\n};\n\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass EditFishForm extends React.Component {\n    handleChange = (event) => {\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value \n        };\n        this.props.updateFish(this.props.index, updatedFish)\n    }\n    \n    static propTypes = {\n        fish: PropTypes.shape({\n            name: PropTypes.string,\n            status: PropTypes.string,\n            desc: PropTypes.string,\n            image: PropTypes.string,\n            price: PropTypes.number\n        }),\n        index: PropTypes.string,\n        updateFish: PropTypes.func\n    }\n    \n    render() {\n        return (\n            <div className='fish-edit'>\n                <input type='text' name=\"name\"  onChange={this.handleChange} value={this.props.fish.name}/>\n                <input type='text' name=\"price\" onChange={this.handleChange} value={this.props.fish.price}/>\n                <select type='text' name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out</option>\n                </select>\n                <textarea type='text' name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc}/>\n                <input type='text' name=\"image\" onChange={this.handleChange} value={this.props.fish.image}/>\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Delete Fish</button>\n            </div>\n            )\n    }\n}\n\nexport default EditFishForm","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Login = (props) => (\n    <nav className='login'>\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your stores inventory</p>\n        <button className='github' onClick={() => props.authenticate('Github')}>\n        Log in with GitHub\n        </button>\n    </nav>\n)\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n}\n\nexport default Login","import Rebase from 're-base'\nimport firebase from 'firebase'\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyCgmpkveDc7AYaRywa1pQsC-wxshd6fMpk\",\n    authDomain: \"catch-of-the-day-alwin.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-alwin.firebaseio.com\",\n})\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp }\n\nexport default base","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n    \n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        addFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func\n    }\n    \n    state = {\n        uid: null,\n        owner: null\n    }\n    \n    componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n    \n    authHandler = async (authData) => {\n        const store = await base.fetch(this.props.storeId, {context: this})\n        if (!store.owner) {\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            })\n        }\n        \n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid \n        })\n    }\n    \n    authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n    };\n    \n    logout = async () => {\n        await firebase.auth().signOut()\n        this.setState({uid: null})\n    }\n    \n    render() {\n        \n        const logout = <button onClick={this.logout}>Log Out</button>\n        \n        if (!this.state.uid) {\n        return <Login authenticate={this.authenticate}/>\n        }\n        \n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                <p>Sorry you are not the owner</p>\n                {logout}\n                </div>\n                )\n        }\n        \n        return (\n            <div className='inventory'>\n            <h2>Inventory</h2>\n            {logout}\n            {Object.keys(this.props.fishes).map(key => \n                <EditFishForm \n                    key={key} \n                    index={key} \n                    fish={this.props.fishes[key]} \n                    updateFish={this.props.updateFish}\n                    deleteFish={this.props.deleteFish}\n                />)}\n            <AddFishForm addFish={this.props.addFish} />\n            <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div>\n            )\n    }\n};\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {formatPrice} from '../helpers'\n\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        addToOrder: PropTypes.func\n    }\n    render() {\n        const {image, name, price, desc, status} = this.props.details\n        const isAvailable = status === 'available';\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3 className='fish-name'>\n                {name}\n                <span className='price'>{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\n                {isAvailable ? 'Add To Order' : 'Sold Out!'}\n                </button>\n            </li>\n            )\n    }\n}\n\nexport default Fish;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport Header from './Header'\nimport Order from './Order'\nimport Inventory from './Inventory'\nimport sampleFishes from  '../sample-fishes'\nimport Fish from './Fish'\nimport base from \"../base\"\n\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    }\n    \n    static propTypes = {\n        match: PropTypes.object\n    }\n    \n    componentDidMount() {\n        const localStorageRef = localStorage.getItem(this.props.match.params.storeId)\n        if(localStorageRef) {\n            this.setState({order: JSON.parse(localStorageRef)})\n        }\n        \n        this.ref = base.syncState(`${this.props.match.params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        })\n    }\n    \n    componentDidUpdate() {\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order))\n    }\n    \n    componentWillUnmount() {\n        base.removeBinding(this.ref)\n    }\n    \n    addFish = (fish) => {\n        const fishes = {...this.state.fishes};\n        fishes[`fish${Date.now()}`] = fish;\n        this.setState ({\n            fishes: fishes\n        })\n    }\n    \n    updateFish = (key, updatedFish) => {\n        const fishes = {...this.state.fishes}\n        fishes[key] = updatedFish;\n        this.setState({fishes: fishes})\n    }\n    \n    deleteFish = (key) => {\n        const fishes = {...this.state.fishes}\n        fishes[key] = null;\n        this.setState ({fishes: fishes})\n    }\n    \n    loadSampleFishes = () => {\n            this.setState({fishes: sampleFishes})\n            }\n    \n    addToOrder = (key) => {\n        const order = {...this.state.order};\n        order[key] = order[key] +1 || 1;\n        this.setState({\n            order: order\n        })\n    }\n    \n    removeFromOrder = (key) => {\n        const order = {...this.state.order};\n        delete order[key];\n        this.setState({\n            order: order\n        })\n    }\n    \n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className='menu'>\n                    <Header tagline='Fresh Seafood Market'/>\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => (\n                        <Fish \n                        key={key}\n                        index = {key}\n                        details={this.state.fishes[key]}\n                        addToOrder={this.addToOrder}\n                        />\n                        ))}\n                    </ul>\n                </div>\n                <Order \n                    fishes={this.state.fishes} \n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                    />\n                <Inventory \n                    fishes={this.state.fishes} \n                    updateFish={this.updateFish} \n                    addFish={this.addFish} \n                    loadSampleFishes={this.loadSampleFishes} \n                    deleteFish={this.deleteFish}\n                    storeId={this.props.match.params.storeId}\n                    />\n            </div>    \n        );\n    };\n};\n\nexport default App;","import React from 'react'\n\nconst NotFound = () => (\n    <div>\n    <h2>Not Found</h2>\n    </div>\n    );\n    \nexport default NotFound","import { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport StorePicker from \"./StorePicker\"\nimport App from './App'\nimport NotFound from \"./NotFound\"\nimport React from 'react'\n\nconst Router = () => (\n     <BrowserRouter>\n        <Switch>\n            <Route exact path='/' component={StorePicker}></Route>\n            <Route path='/store/:storeId' component={App}></Route>\n            <Route component={NotFound}></Route>\n        </Switch>\n    </BrowserRouter>\n)\n\nexport default Router","import React from 'react';\nimport { render } from \"react-dom\";\nimport './css/style.css';\nimport Router from \"./components/Router\"\n\nrender(<Router/>, document.getElementById(\"main\"))"],"sourceRoot":""}